<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.authservice.mapper.MemberMapper">

    <resultMap id="memberResultMap" type="com.example.authservice.entity.Member">
        <id property="memberId" column="member_id"/>
        <result property="memberOriginalId" column="member_original_id"/>
        <result property="memberEmail" column="member_email"/>
        <result property="memberPassword" column="member_password"/>
        <result property="memberRefreshToken" column="member_refresh_token"/>
        <result property="memberIsDelete" column="member_is_delete"/>
        <result property="memberRole" column="member_role"/>
    </resultMap>

    <insert id="save" parameterType="com.example.authservice.entity.Member">
        insert into member
        (
            member_original_id,
             member_email,
             member_password,
             member_refresh_token,
             member_role,
            member_is_delete
        )
        VALUES
        (
            #{memberOriginalId},
             #{memberEmail},
             #{memberPassword},
             null,
             #{memberRole},
             #{memberIsDelete}
        )
    </insert>

    <update id="saveRefreshToken">
        update member
        set member_refresh_token = #{memberRefreshToken}
        where member_original_id = #{memberOriginalId}
        and member_role = #{memberRole}
    </update>

    <select id="findMemberByMemberEmailForUser" resultMap="memberResultMap">
        select
            member_original_id,
            member_email,
            member_password,
            member_is_delete,
            member_role
        from member
        where member_email = #{memberEmail}
        and member_role = 'USER';
    </select>

    <select id="findMemberByMemberEmailForAdmin" resultMap="memberResultMap">
        select
            member_original_id,
            member_email,
            member_password,
            member_is_delete,
            member_role
        from member
        where member_email = #{memberEmail}
          and member_role = 'ADMIN';
    </select>

    <select id="findMemberByRefreshToken" resultMap="memberResultMap">
        select
            member_original_id,
            member_email,
            member_refresh_token,
            member_role
        from member
        where member_refresh_token = #{memberRefreshToken};
    </select>

    <update id="logout">
        update member
        set member_refresh_token = null
        where member_refresh_token = #{memberRefreshToken}
        and member_role = #{memberRole};
    </update>

    <update id="changePassword">
        update member
        set member_password = #{memberPassword}
        where member_original_id = #{memberOriginalId}
        and member_role = #{memberRole}
    </update>
</mapper>
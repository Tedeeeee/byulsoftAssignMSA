server:
  port: 8888

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins:
              -  'http://localhost:5173'
            allow-credentials: true
            allowedHeaders:
              - "Origin"
              - "Content-Type"
              - "Accept"
              - "Authorization"
              - "User-Key"
              - "Request-Tracker"
              - "Session-Tracker"
              - "X-XSRF-TOKEN"
              - "X-IBM-CLIENT-ID"
              - "Message-ID"
              - "X-IBM-CLIENT-SECRET"
              - "memberEmail"
            allowedMethods:
              - GET
              - POST
              - OPTIONS
      routes:
        # 인증, 인가 관련
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/authService/**
          filters:
            - RewritePath=/api/authService/(?<segment>.*), /${segment}

        # 사용자 관련
        - id: user-service-noAuth
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/userService/noAuth/**
          filters:
            - RewritePath=/api/userService/(?<segment>.*), /${segment}
        - id: user-service-withAuth
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/userService/**
          filters:
            - RewritePath=/api/userService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        # 사용자 게시글 관련
        - id: user-board-service-noAuth
          uri: lb://USER-BOARD-SERVICE
          predicates:
            - Path=/api/userBoardService/noAuth/**
          filters:
            - RewritePath=/api/userBoardService/(?<segment>.*), /${segment}
        - id: user-board-service
          uri: lb://USER-BOARD-SERVICE
          predicates:
            - Path=/api/userBoardService/**
          filters:
            - RewritePath=/api/userBoardService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        # 사용자 댓글 관련
        - id: user-comment-service-noAuth
          uri: lb://USER-COMMENT-SERVICE
          predicates:
            - Path=/api/userCommentService/noAuth/**
          filters:
            - RewritePath=/api/userCommentService/(?<segment>.*), /${segment}
        - id: user-comment-service
          uri: lb://USER-COMMENT-SERVICE
          predicates:
            - Path=/api/userCommentService/**
          filters:
            - RewritePath=/api/userCommentService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        # 사용자 신고 관련
        - id: user-report-service-noAuth-with-feign
          uri: lb://USER-REPORT-SERVICE
          predicates:
            - Path=/api/userReportService/noAuth/**
          filters:
            - RewritePath=/api/userReportService/(?<segment>.*), /${segment}
        - id: user-report-service
          uri: lb://USER-REPORT-SERVICE
          predicates:
            - Path=/api/userReportService/**
          filters:
            - RewritePath=/api/userReportService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        # 관리자 관련
        - id: admin-service-noAuth
          uri: lb://ADMIN-SERVICE
          predicates:
            - Path=/api/adminService/noAuth/**
          filters:
            - RewritePath=/api/adminService/(?<segment>.*), /${segment}
        - id: admin-service
          uri: lb://ADMIN-SERVICE
          predicates:
            - Path=/api/adminService/**
          filters:
            - RewritePath=/api/adminService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilterForAdmin

        # 관리자 게시판
        - id: admin-board-service
          uri: lb://ADMIN-BOARD-SERVICE
          predicates:
            - Path=/api/adminBoardService/**
          filters:
            - RewritePath=/api/adminBoardService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilterForAdmin

        # 관리자 댓글
        - id: admin-comment-service
          uri: lb://ADMIN-COMMENT-SERVICE
          predicates:
            - Path=/api/adminCommentService/**
          filters:
            - RewritePath=/api/adminCommentService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilterForAdmin

        # 관리자 신고 관련
        - id: admin-report-service
          uri: lb://ADMIN-REPORT-SERVICE
          predicates:
            - Path=/api/adminReportService/**
          filters:
            - RewritePath=/api/adminReportService/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilterForAdmin
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true

jwt:
  secret:
    userKey: ZDUxNzQ4NzY4MjQ4MDY0YjY4MjE3MzU2Y2RhNTc4Zjc2ZDg0NTkzNDFiZjAx
    adminKey: aHR0cHM6Ly93d3cueW91dGhlc3Rvd2lsbG5vdC5jb20vYmFzZTY0IGlzIGdyZWF0

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

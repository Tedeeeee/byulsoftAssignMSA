<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.userreportservice.mapper.ReportMapper">
    <resultMap id="reportMap" type="com.example.userreportservice.entity.Report">
        <id property="reportId" column="report_id"/>
        <result property="reporterMemberId" column="reporter_member_id"/>
        <result property="reportedMemberId" column="reported_member_id"/>
        <result property="reportContent" column="report_content"/>
        <result property="reportType" column="report_type"/>
        <result property="reportTypeId" column="report_type_id"/>
        <result property="reportState" column="report_status"/>
        <result property="reportCreatedAt" column="report_created_at"/>
        <result property="reportUpdatedAt" column="report_updated_at"/>
    </resultMap>

    <insert id="save" parameterType="com.example.userreportservice.entity.Report">
        insert into report
            (
             reporter_member_id,
             reported_member_id,
             report_content,
             report_type,
             report_type_id
            )
        VALUES
            (
             #{reporterMemberId},
             #{reportedMemberId},
             #{reportContent},
             #{reportType},
             #{reportTypeId}
            )
    </insert>

    <select id="getReportById" resultMap="reportMap">
        select
            report_id,
            reporter_member_id,
            reported_member_id,
            report_content,
            report_type,
            report_type_id,
            report_status,
            report_created_at,
            report_updated_at
        from report
        where report_id = #{reportId};
    </select>

    <select id="getMyReport" resultMap="reportMap">
        select
            report_id,
            reported_member_id,
            report_content,
            report_status,
            report_created_at
        from report
        where reporter_member_id = #{memberId}
    </select>

    <update id="revokeReport">
        update report
        set report_status = 'REVOKE'
        where report_id = #{reportId};
    </update>

    <select id="isReportExist" resultType="java.lang.Boolean">
        select exists(
            select 1
            from report
            where reported_member_id = #{reportedMemberId}
            and report_type = #{reportType}
            and report_type_id = #{reportTypeId}
        )
    </select>
</mapper>
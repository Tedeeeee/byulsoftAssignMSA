<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.adminboardservice.mapper.BoardMapper">

    <resultMap id="boardResultMap" type="com.example.adminboardservice.entity.Board">
        <id property="boardId" column="board_id" />
        <result property="memberId" column="member_id"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardRegion" column="board_region"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardView" column="board_view"/>
        <result property="boardCreatedAt" column="board_created_at"/>
        <result property="boardUpdatedAt" column="board_updated_at"/>
        <result property="boardIsDelete" column="board_is_delete"/>
        <collection property="stars" ofType="com.example.adminboardservice.entity.BoardStar">
            <id property="boardStarId" column="board_star_id"/>
            <result property="boardId" column="board_star_board_id"/>
            <result property="boardStarType" column="board_star_type"/>
            <result property="boardStarShortReview" column="board_star_short_review"/>
            <result property="boardStarRating" column="board_star_rating"/>
        </collection>
    </resultMap>

    <sql id="searchConditionWhere">
        <where>
            <if test="memberId > 0">
                and b.member_id = #{memberId}
            </if>
            <if test="'지역'.equals(searchType)">
                and b.board_region = #{searchText}
            </if>
            <if test="'제목'.equals(searchType)">
                and b.board_title like CONCAT('%', #{searchText}, '%')
            </if>
            <if test="startDate != null and startDate != ''">
                and b.board_created_at between #{startDate} and #{endDate}
            </if>
        </where>
        order by b.board_created_at desc
    </sql>

    <select id="getAllBoard" resultMap="boardResultMap">
        select sub.board_id,
               sub.member_id,
               sub.board_title,
               sub.board_content,
               sub.board_region,
               sub.board_view,
               sub.board_updated_at,
               sub.board_created_at,
               bs.board_star_type,
               bs.board_star_short_review,
               bs.board_star_rating
        from (
            select
                b.board_id,
                b.member_id,
                b.board_title,
                b.board_content,
                b.board_region,
                b.board_view,
                b.board_updated_at,
                b.board_created_at
            from board b
            <include refid="searchConditionWhere"/>
            limit #{pageSize} offset #{offset}
             ) sub
        join board_star bs on sub.board_id = bs.board_id;
    </select>

    <select id="countTotalBoards" resultType="java.lang.Integer">
        select count(1)
        from board b
        <include refid="searchConditionWhere"/>
    </select>

    <update id="softDeleteBoard">
        update board
        set board_is_delete = 1
        where board_id = #{boardId}
    </update>
</mapper>
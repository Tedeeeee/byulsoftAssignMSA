<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.admincommentservice.mapper.CommentMapper">

    <resultMap id="commentResultMap" type="com.example.admincommentservice.entity.Comment">
        <id property="commentId" column="comment_id"/>
        <result property="boardId" column="board_id"/>
        <result property="memberId" column="member_id"/>
        <result property="adminId" column="admin_id"/>
        <result property="commentContent" column="comment_content"/>
        <result property="commentCreatedAt" column="comment_created_at"/>
        <result property="commentUpdatedAt" column="comment_updated_at"/>
        <result property="commentIsDelete" column="comment_is_delete"/>
    </resultMap>

    <insert id="save" parameterType="com.example.admincommentservice.entity.Comment">
        insert into comment (
            board_id,
            admin_id,
            comment_content,
            comment_is_delete
        ) values (
             #{boardId},
             #{adminId},
             #{commentContent},
             false
        )
    </insert>

    <select id="findCommentsByBoardId" resultMap="commentResultMap">
        select comment_id,
               board_id,
               member_id,
               admin_id,
               comment_content,
               comment_created_at,
               comment_updated_at,
               comment_is_delete
        from comment
        where board_id = #{boardId}
    </select>

    <sql id="searchConditionWhere">
        <where>
            <if test="memberId > 0">
                and c.member_id = #{memberId}
            </if>
            <if test="searchText != null and searchText != ''">
                and c.comment_content like CONCAT('%', #{searchText}, '%')
            </if>
            <if test="startDate != null and startDate != ''">
                and c.comment_created_at between #{startDate} and #{endDate}
            </if>
        </where>
    </sql>

    <select id="getAllComment" resultMap="commentResultMap">
        select *
        from comment c
        <include refid="searchConditionWhere" />
        order by c.comment_created_at desc
        limit #{pageSize} offset #{offset}
    </select>

    <select id="countTotalComments" resultType="java.lang.Integer">
        select count(1)
        from comment c
        <include refid="searchConditionWhere" />
        order by c.comment_created_at desc
    </select>
    
    <update id="softDeleteComment">
        update comment
        set comment_is_delete = 1
        where comment_id = #{commentId};
    </update>

    <update id="updateComment">
        update comment
        set comment_content = #{commentContent}
        where comment_id = #{commentId};
    </update>

</mapper>